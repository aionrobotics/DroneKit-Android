/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE HIL_STATE PACKING
package com.mavlink.common;
import com.mavlink.MAVLinkPacket;
import com.mavlink.messages.MAVLinkMessage;
import com.mavlink.messages.MAVLinkPayload;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

        
/**
 * Sent from simulation to autopilot. This packet is useful for high throughput applications such as hardware in the loop simulations.
 */
public class msg_hil_state extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_HIL_STATE = 90;
    public static final int MAVLINK_MSG_LENGTH = 56;
    private static final long serialVersionUID = MAVLINK_MSG_ID_HIL_STATE;

      
    /**
     * Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude the number.
     */
    public long time_usec;
      
    /**
     * Roll angle
     */
    public float roll;
      
    /**
     * Pitch angle
     */
    public float pitch;
      
    /**
     * Yaw angle
     */
    public float yaw;
      
    /**
     * Body frame roll / phi angular speed
     */
    public float rollspeed;
      
    /**
     * Body frame pitch / theta angular speed
     */
    public float pitchspeed;
      
    /**
     * Body frame yaw / psi angular speed
     */
    public float yawspeed;
      
    /**
     * Latitude
     */
    public int lat;
      
    /**
     * Longitude
     */
    public int lon;
      
    /**
     * Altitude
     */
    public int alt;
      
    /**
     * Ground X Speed (Latitude)
     */
    public short vx;
      
    /**
     * Ground Y Speed (Longitude)
     */
    public short vy;
      
    /**
     * Ground Z Speed (Altitude)
     */
    public short vz;
      
    /**
     * X acceleration
     */
    public short xacc;
      
    /**
     * Y acceleration
     */
    public short yacc;
      
    /**
     * Z acceleration
     */
    public short zacc;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_HIL_STATE;
        
        packet.payload.putUnsignedLong(time_usec);
        packet.payload.putFloat(roll);
        packet.payload.putFloat(pitch);
        packet.payload.putFloat(yaw);
        packet.payload.putFloat(rollspeed);
        packet.payload.putFloat(pitchspeed);
        packet.payload.putFloat(yawspeed);
        packet.payload.putInt(lat);
        packet.payload.putInt(lon);
        packet.payload.putInt(alt);
        packet.payload.putShort(vx);
        packet.payload.putShort(vy);
        packet.payload.putShort(vz);
        packet.payload.putShort(xacc);
        packet.payload.putShort(yacc);
        packet.payload.putShort(zacc);
        
        
        return packet;
    }

    /**
     * Decode a hil_state message into this class fields
     *
     * @param payload The message to decode
     */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
        
        this.time_usec = payload.getUnsignedLong();
        this.roll = payload.getFloat();
        this.pitch = payload.getFloat();
        this.yaw = payload.getFloat();
        this.rollspeed = payload.getFloat();
        this.pitchspeed = payload.getFloat();
        this.yawspeed = payload.getFloat();
        this.lat = payload.getInt();
        this.lon = payload.getInt();
        this.alt = payload.getInt();
        this.vx = payload.getShort();
        this.vy = payload.getShort();
        this.vz = payload.getShort();
        this.xacc = payload.getShort();
        this.yacc = payload.getShort();
        this.zacc = payload.getShort();
        
        
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_hil_state() {
        this.msgid = MAVLINK_MSG_ID_HIL_STATE;
    }
    
    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_hil_state( long time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int lat, int lon, int alt, short vx, short vy, short vz, short xacc, short yacc, short zacc) {
        this.msgid = MAVLINK_MSG_ID_HIL_STATE;

        this.time_usec = time_usec;
        this.roll = roll;
        this.pitch = pitch;
        this.yaw = yaw;
        this.rollspeed = rollspeed;
        this.pitchspeed = pitchspeed;
        this.yawspeed = yawspeed;
        this.lat = lat;
        this.lon = lon;
        this.alt = alt;
        this.vx = vx;
        this.vy = vy;
        this.vz = vz;
        this.xacc = xacc;
        this.yacc = yacc;
        this.zacc = zacc;
        
    }
    
    /**
     * Constructor for a new message, initializes everything
     */
    public msg_hil_state( long time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int lat, int lon, int alt, short vx, short vy, short vz, short xacc, short yacc, short zacc, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_HIL_STATE;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.time_usec = time_usec;
        this.roll = roll;
        this.pitch = pitch;
        this.yaw = yaw;
        this.rollspeed = rollspeed;
        this.pitchspeed = pitchspeed;
        this.yawspeed = yawspeed;
        this.lat = lat;
        this.lon = lon;
        this.alt = alt;
        this.vx = vx;
        this.vy = vy;
        this.vz = vz;
        this.xacc = xacc;
        this.yacc = yacc;
        this.zacc = zacc;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_hil_state(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_HIL_STATE;
        
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from JSON Object
     */
    public msg_hil_state(JSONObject jo) {
        this.msgid = MAVLINK_MSG_ID_HIL_STATE;

        readJSONheader(jo);
        
        this.time_usec = (long)jo.optLong("time_usec");
        this.roll = (float)jo.optFloat("roll");
        this.pitch = (float)jo.optFloat("pitch");
        this.yaw = (float)jo.optFloat("yaw");
        this.rollspeed = (float)jo.optFloat("rollspeed");
        this.pitchspeed = (float)jo.optFloat("pitchspeed");
        this.yawspeed = (float)jo.optFloat("yawspeed");
        this.lat = (int)jo.optInt("lat");
        this.lon = (int)jo.optInt("lon");
        this.alt = (int)jo.optInt("alt");
        this.vx = (short)jo.optInt("vx");
        this.vy = (short)jo.optInt("vy");
        this.vz = (short)jo.optInt("vz");
        this.xacc = (short)jo.optInt("xacc");
        this.yacc = (short)jo.optInt("yacc");
        this.zacc = (short)jo.optInt("zacc");
        
        
    }
    
    /**
     * Convert this class to a JSON Object
     */
    public JSONObject toJSON() throws JSONException {
        final JSONObject jo = getJSONheader();
        
        jo.put("time_usec", time_usec);
        jo.put("roll", roll);
        jo.put("pitch", pitch);
        jo.put("yaw", yaw);
        jo.put("rollspeed", rollspeed);
        jo.put("pitchspeed", pitchspeed);
        jo.put("yawspeed", yawspeed);
        jo.put("lat", lat);
        jo.put("lon", lon);
        jo.put("alt", alt);
        jo.put("vx", vx);
        jo.put("vy", vy);
        jo.put("vz", vz);
        jo.put("xacc", xacc);
        jo.put("yacc", yacc);
        jo.put("zacc", zacc);
        
        
        return jo;
    }

                                    
    /**
     * Returns a string with the MSG name and data
     */
    public String toString() {
        return "MAVLINK_MSG_ID_HIL_STATE - sysid:"+sysid+" compid:"+compid+" time_usec:"+time_usec+" roll:"+roll+" pitch:"+pitch+" yaw:"+yaw+" rollspeed:"+rollspeed+" pitchspeed:"+pitchspeed+" yawspeed:"+yawspeed+" lat:"+lat+" lon:"+lon+" alt:"+alt+" vx:"+vx+" vy:"+vy+" vz:"+vz+" xacc:"+xacc+" yacc:"+yacc+" zacc:"+zacc+"";
    }
}
        